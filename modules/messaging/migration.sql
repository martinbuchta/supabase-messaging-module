create table "public"."messages" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "room_id" bigint not null,
    "user_id" uuid not null default auth.uid(),
    "content" text not null
);


alter table "public"."messages" enable row level security;

create table "public"."room_participants" (
    "id" bigint generated by default as identity not null,
    "joined_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "room_id" bigint not null
);


alter table "public"."room_participants" enable row level security;

create table "public"."rooms" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" character varying not null,
    "is_private" boolean not null default true
);


alter table "public"."rooms" enable row level security;

CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id);

CREATE UNIQUE INDEX room_participants_pkey ON public.room_participants USING btree (id);

CREATE UNIQUE INDEX rooms_pkey ON public.rooms USING btree (id);

alter table "public"."messages" add constraint "messages_pkey" PRIMARY KEY using index "messages_pkey";

alter table "public"."room_participants" add constraint "room_participants_pkey" PRIMARY KEY using index "room_participants_pkey";

alter table "public"."rooms" add constraint "rooms_pkey" PRIMARY KEY using index "rooms_pkey";

alter table "public"."messages" add constraint "messages_room_id_fkey" FOREIGN KEY (room_id) REFERENCES rooms(id) ON DELETE CASCADE not valid;

alter table "public"."messages" validate constraint "messages_room_id_fkey";

alter table "public"."messages" add constraint "messages_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."messages" validate constraint "messages_user_id_fkey";

alter table "public"."room_participants" add constraint "room_participants_room_id_fkey" FOREIGN KEY (room_id) REFERENCES rooms(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."room_participants" validate constraint "room_participants_room_id_fkey";

alter table "public"."room_participants" add constraint "room_participants_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."room_participants" validate constraint "room_participants_user_id_fkey";

grant delete on table "public"."messages" to "anon";

grant insert on table "public"."messages" to "anon";

grant references on table "public"."messages" to "anon";

grant select on table "public"."messages" to "anon";

grant trigger on table "public"."messages" to "anon";

grant truncate on table "public"."messages" to "anon";

grant update on table "public"."messages" to "anon";

grant delete on table "public"."messages" to "authenticated";

grant insert on table "public"."messages" to "authenticated";

grant references on table "public"."messages" to "authenticated";

grant select on table "public"."messages" to "authenticated";

grant trigger on table "public"."messages" to "authenticated";

grant truncate on table "public"."messages" to "authenticated";

grant update on table "public"."messages" to "authenticated";

grant delete on table "public"."messages" to "service_role";

grant insert on table "public"."messages" to "service_role";

grant references on table "public"."messages" to "service_role";

grant select on table "public"."messages" to "service_role";

grant trigger on table "public"."messages" to "service_role";

grant truncate on table "public"."messages" to "service_role";

grant update on table "public"."messages" to "service_role";

grant delete on table "public"."room_participants" to "anon";

grant insert on table "public"."room_participants" to "anon";

grant references on table "public"."room_participants" to "anon";

grant select on table "public"."room_participants" to "anon";

grant trigger on table "public"."room_participants" to "anon";

grant truncate on table "public"."room_participants" to "anon";

grant update on table "public"."room_participants" to "anon";

grant delete on table "public"."room_participants" to "authenticated";

grant insert on table "public"."room_participants" to "authenticated";

grant references on table "public"."room_participants" to "authenticated";

grant select on table "public"."room_participants" to "authenticated";

grant trigger on table "public"."room_participants" to "authenticated";

grant truncate on table "public"."room_participants" to "authenticated";

grant update on table "public"."room_participants" to "authenticated";

grant delete on table "public"."room_participants" to "service_role";

grant insert on table "public"."room_participants" to "service_role";

grant references on table "public"."room_participants" to "service_role";

grant select on table "public"."room_participants" to "service_role";

grant trigger on table "public"."room_participants" to "service_role";

grant truncate on table "public"."room_participants" to "service_role";

grant update on table "public"."room_participants" to "service_role";

grant delete on table "public"."rooms" to "anon";

grant insert on table "public"."rooms" to "anon";

grant references on table "public"."rooms" to "anon";

grant select on table "public"."rooms" to "anon";

grant trigger on table "public"."rooms" to "anon";

grant truncate on table "public"."rooms" to "anon";

grant update on table "public"."rooms" to "anon";

grant delete on table "public"."rooms" to "authenticated";

grant insert on table "public"."rooms" to "authenticated";

grant references on table "public"."rooms" to "authenticated";

grant select on table "public"."rooms" to "authenticated";

grant trigger on table "public"."rooms" to "authenticated";

grant truncate on table "public"."rooms" to "authenticated";

grant update on table "public"."rooms" to "authenticated";

grant delete on table "public"."rooms" to "service_role";

grant insert on table "public"."rooms" to "service_role";

grant references on table "public"."rooms" to "service_role";

grant select on table "public"."rooms" to "service_role";

grant trigger on table "public"."rooms" to "service_role";

grant truncate on table "public"."rooms" to "service_role";

grant update on table "public"."rooms" to "service_role";


